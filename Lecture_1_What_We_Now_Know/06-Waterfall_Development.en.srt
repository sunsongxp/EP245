1
00:00:00,000 --> 00:00:04,000
If you remember I said engineering was doing waterfall development.

2
00:00:04,000 --> 00:00:08,000
Waterfall development is just a step by step process that says

3
00:00:08,000 --> 00:00:12,000
marketing rights are requirements of what the product should do.

4
00:00:12,000 --> 00:00:18,000
Engineering takes that and translates that into features. Engineering then designs the product.

5
00:00:18,000 --> 00:00:20,000
Either codes it or builds the hardware.

6
00:00:20,000 --> 00:00:26,000
They test it and they maintain it and this is kind of a waterfall life cycle step by step.

7
00:00:26,000 --> 00:00:34,000
But if you really look at this, there's an implicit fallacy that no one ever noticed for 40 years.

8
00:00:34,000 --> 00:00:39,000
To write the requirements and do the design, assumes on day one

9
00:00:39,000 --> 00:00:43,000
you know the problem or need the customer has.

10
00:00:43,000 --> 00:00:48,000
Let me say it again, waterfall development assumes

11
00:00:48,000 --> 00:00:53,000
you understand the customer problem and need on day one.

12
00:00:53,000 --> 00:01:00,000
Now in a large company with existing customers, existing products, existing sales channel,

13
00:01:00,000 --> 00:01:07,000
you know what, this might actually be true but in most startups all you have is the founder's vision

14
00:01:07,000 --> 00:01:13,000
and what you tend to do in a startup is confuse a faith-based vision

15
00:01:13,000 --> 00:01:17,000
with customers facts about problems and needs and what happens?

16
00:01:17,000 --> 00:01:22,000
The consequence of assuming you know the customer problem

17
00:01:22,000 --> 00:01:27,000
means you assume you know every possible feature to ship on day one.

18
00:01:27,000 --> 00:01:31,000
So therefore you shut the door and you start implementing

19
00:01:31,000 --> 00:01:33,000
and instead of just implementing a piece at a time,

20
00:01:33,000 --> 00:01:39,000
you actually implement every possible feature you could think about for version 1.0.

21
00:01:39,000 --> 00:01:42,000
The irony is that we now know somewhere between

22
00:01:42,000 --> 00:01:48,000
85 and 90% of most software product features are unwanted and unneeded by customers.

23
00:01:48,000 --> 00:01:53,000
That's an enormous amount of waste of time and money that ends up on the floor.

24
00:01:53,000 --> 00:01:58,000
We now know that waterfall and product management execution on two knowns

25
00:01:58,000 --> 00:02:02,000
is just kind of the wrong way to approach it in a startup.

26
00:02:02,000 --> 00:02:06,000
It makes all the sense in the world in a large company.
